package $controllerPackageName;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

//import the domain
import ${basePackageName}.web.domain.$domainClassName;


@Controller
public class ${domainClassName}Controller {

	@RequestMapping("/controller/home")
	public String showHomePage(){
		return "/WEB-INF/index.jsp";
	}
	
	@RequestMapping(value = "/controller/$domainClassName.toLowerCase()/{id}", method = RequestMethod.GET)
	public @ResponseBody $domainClassName get$domainClassName(@PathVariable("id") String id){
		 $domainClassName  $domainClassName.toLowerCase() = new  $domainClassName();
		  ${domainClassName.toLowerCase()}.populateWithSample();
		 return $domainClassName.toLowerCase();
	}
	
	
	@RequestMapping(value = "/controller/${domainClassName.toLowerCase()}", headers = {"accept=application/json"}, method = RequestMethod.POST)
	public @ResponseBody String saveNew${domainClassName}(@RequestBody ${domainClassName} ${domainClassName.substring(0,1).toLowerCase()}${domainClassName.substring(1)}){
		System.out.println(${domainClassName.substring(0,1).toLowerCase()}${domainClassName.substring(1)}.toString());
		return "";
	}
	
	@RequestMapping(value = "/controller/${domainClassName.toLowerCase()}/{id}", headers = {"accept=application/json"}, method = RequestMethod.PUT)
	public  @ResponseBody String  update${domainClassName}(@RequestBody ${domainClassName} ${domainClassName.substring(0,1).toLowerCase()}${domainClassName.substring(1)}){
		System.out.println(${domainClassName.substring(0,1).toLowerCase()}${domainClassName.substring(1)}.toString());
		return "";
	}
	
	@RequestMapping("/controller/${domainClassName.toLowerCase()}s")
	public @ResponseBody List<${domainClassName}> getAll${domainClassName}s(){
		List<${domainClassName}> all${domainClassName} = new ArrayList<${domainClassName}>();
		${domainClassName} ${domainClassName.toLowerCase()}1 = new ${domainClassName}();		
		${domainClassName.toLowerCase()}1.populateWithSample();
		all${domainClassName}.add(${domainClassName.toLowerCase()}1);
		
		${domainClassName} ${domainClassName.toLowerCase()}2 = new ${domainClassName}();		
		${domainClassName.toLowerCase()}2.populateWithSample();
		all${domainClassName}.add(${domainClassName.toLowerCase()}2);
		
		return all${domainClassName};
	}
	
	
}
